{"version":3,"sources":["actions/actionTypes.js","reducers/taskReducer.js","saga/saga.js","store/configureStore.js","components/TaskForm.js","components/TaskHeader.js","components/App.js","index.js"],"names":["LOGIN_USER","LOAD_TASKS","LOAD_TASKS_SUCCESS","LOAD_TASKS_ERROR","LOAD_TOKEN_SUCCESS","LOAD_TOKEN_ERROR","ADD_TASKS","UPDATE_TASKS","ADD_TASKS_SUCCESS","ADD_TASKS_ERROR","DELETE_TASKS","GET_TASK","GET_TASK_SUCCESS","GET_TASK_ERROR","FETCH_ASSIGNEE","LOAD_ASSIGNEE","LOAD_ASSIGNEE_ERROR","initialState","data","loading","error","token","singleTask","taskReducer","state","arguments","length","undefined","action","type","types","Object","objectSpread","task","assignee","addTasks","fetchAssignee","deleteTasks","getSingleTaskNoApi","updateTasks","LoginUser","fetchTask","saga","getData","fetchAsync","_callee","func","response","regenerator_default","a","wrap","_context10","prev","next","sent","ok","json","abrupt","Error","stop","getTasks","fetch","method","headers","Authorization","Accept","Content-Type","getToken","body","JSON","stringify","email","password","formdata","getKeyword","users","_context","select","is_completed","time_zone","call","alert","message","put","loadTaskAction","t0","_marked","fetchAssigneeList","_context2","_marked2","url","_context3","_marked3","_context5","_marked5","task_id","_context6","_marked6","_context7","console","log","errors","results","_marked7","tasks","_context8","_marked8","getTaskAction","task_msg","task_date","task_time","assigned_user","id","_context9","all","takeLatest","t1","takeEvery","t2","t3","t4","t5","t6","t7","t8","_marked9","sagaMiddleware","createSagaMiddleware","TaskForm","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","onSubmit","formData","FormData","form","object","forEach","value","key","split","seconds","updateTask","addTask","cancel","window","location","reload","handleChange","event","_event$target","target","name","setState","defineProperty","nextProps","_","isEqual","_nextProps$singleTask","_nextProps$singleTask2","_nextProps$singleTask3","_nextProps$singleTask4","_nextProps$singleTask5","_nextProps$singleTask6","MHTime","measuredTime","Date","setSeconds","toISOString","substr","_this$props$assigneeL","assigneeList","map","user_status","react_default","createElement","_this2","className","Form","ref","el","Row","Group","as","Col","sm","md","lg","Label","Control","onChange","style","width","getAssignee","Button","variant","float","onClick","margin-right","React","Component","connect","dispatch","actionCreator","actionUpdator","TaskHeader","_ref","eventKey","callback","currentEventKey","useContext","AccordionContext","toggleOnClick","useAccordionToggle","isCurrentEventKey","border-left","padding-left","padding-top","plus_square","TaskHeaderPlus","_ref2","useDispatch","dash_square","App","showForm","login","prevProps","loadTasks","document","getElementById","click","_this$props$tasks","listItems","d","border-bottom","color","padding-bottom","eye","trash","deleteTaskAction","Fragment","Accordion","defaultActiveKey","transition","Card","Header","border","Collapse","Body","components_TaskForm","store","middleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","apply","run","configureStore","ReactDOM","render","es","components_App"],"mappings":"iOAAaA,EAAa,aACbC,EAAa,aACbC,EAAqB,qBACrBC,EAAmB,mBACnBC,EAAqB,qBACrBC,EAAmB,mBACnBC,EAAY,YACZC,EAAe,eACfC,EAAoB,oBACpBC,EAAkB,kBAClBC,EAAa,eACbC,EAAS,WACTC,EAAmB,mBACnBC,EAAiB,iBACjBC,EAAe,iBACfC,EAAc,gBACdC,EAAoB,sBCd3BC,EAAe,CACjBC,KAAM,GACNC,SAAS,EACTC,MAAO,GACPC,MAAM,GACNC,WAAW,IAGA,SAASC,IAA0C,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBR,EAAcW,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChE,OAAQC,EAAOC,MACb,KAAKC,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKP,EAAZ,CAAkBL,SAAS,EAAMC,MAAM,KAE3C,KAAKU,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKP,EAAZ,CAAkBL,SAAS,EAAKC,MAAM,KAE1C,KAAKU,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKP,EAAZ,CAAoBS,KAAML,EAAOK,KAAKd,SAAS,IAEnD,KAAKW,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKP,EAAZ,CAAkBL,SAAS,EAAMC,MAAOQ,EAAOR,QAEnD,KAAKU,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKP,EAAZ,CAAoBF,WAAYM,EAAOV,KAAKA,KAAKC,SAAS,IAE9D,KAAKW,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKP,EAAZ,CAAkBL,SAAS,EAAMC,MAAOQ,EAAOR,QAEnD,KAAKU,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKP,EAAZ,CAAoBU,SAAUN,EAAOM,SAASf,SAAS,IAE3D,KAAKW,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKP,EAAZ,CAAkBL,SAAS,EAAMC,MAAOQ,EAAOR,QAEnD,KAAKU,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKP,EAAZ,CAAoBH,MAAOO,EAAOV,KAAKC,SAAS,IAEpD,KAAKW,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKP,EAAZ,CAAkBL,SAAS,EAAMC,MAAOQ,EAAOR,QAEnD,KAAKU,EACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKP,EAAZ,CAAoBN,KAAMU,EAAOV,KAAKC,SAAS,IAGnD,KAAKW,EACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKP,EAAZ,CAAkBL,SAAS,EAAMC,MAAOQ,EAAOR,QAEjD,QACI,OAAOI,4DCRLW,cAsCQC,cASJC,cA2CAC,cAWJC,cA6BAC,cAeAC,eA+BOC,IAxNJC,EAAU,SAACnB,GAAD,OAAWA,EAAMH,gBAEzBuB,+EAAf,SAAAC,EAA0BC,GAA1B,IAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC2BP,IAD3B,YACUC,EADVI,EAAAG,MAEiBC,GAFjB,CAAAJ,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAGqBN,EAASS,OAH9B,cAAAL,EAAAM,OAAA,SAAAN,EAAAG,MAAA,aAKU,IAAII,MAAM,uBALpB,wBAAAP,EAAAQ,SAAAd,6BAQA,SAASe,IAGL,OAAOC,MAAM,0EAA2E,CAChFC,OAAQ,MACRC,QAAU,CACVC,cAJW,UAAU3C,GAKrB4C,OAAU,mBACVC,eAAgB,sBAM5B,SAASC,IAKL,OAAON,MAAM,qCAAsC,CAC/CC,OAAQ,OACRC,QAAU,CACNE,OAAU,mBACVC,eAAgB,oBAEpBE,KAAMC,KAAKC,UAVH,CACRC,MAAQ,wBACRC,SAAW,eAanB,SAAUrC,EAASsC,GAAnB,IAAAC,EAAAxD,EAAAyD,EAAAP,EAAA,OAAApB,EAAAC,EAAAC,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,OAEgB,OAFhBuB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAEsBwB,YAAOlC,GAF7B,OAOsB,OALdtB,GAFRuD,EAAAtB,KAGgBoB,EAAa,UAAUrD,IACzBH,EAAOuD,EAASvD,MACd4D,aAAa,EACjB5D,EAAK6D,UAAW,IAN5BH,EAAAvB,KAAA,GAO4BQ,MAAM,0EAA2E,CACjGC,OAAQ,OACRC,QAAS,CACLC,cAAiBU,EACjBT,OAAU,mBACVC,eAAgB,oBAEpBE,KAAMC,KAAKC,UAAUpD,KAdjC,QAgBqB,OATPyD,EAPdC,EAAAtB,KAAAsB,EAAAvB,KAAA,GAgB2B2B,YAAK,CAACL,EAAOA,EAAMnB,OAhB9C,QAkBQ,OAFMY,EAhBdQ,EAAAtB,KAiBQ2B,MAAMb,EAAKc,SAjBnBN,EAAAvB,KAAA,GAkBc8B,YAAI,CAACtD,KAAMD,EAA0BV,KAAMkD,IAlBzD,QAmBQ,OAnBRQ,EAAAvB,KAAA,GAmBc8B,YAAIC,MAnBlB,QAAAR,EAAAvB,KAAA,iBAsBQ,OAtBRuB,EAAAxB,KAAA,GAAAwB,EAAAS,GAAAT,EAAA,SAAAA,EAAAvB,KAAA,GAsBc8B,YAAI,CAACtD,KAAMD,EAAwBR,MAAOwD,EAAAS,GAAEH,UAtB1D,QAuBQD,MAAML,EAAAS,GAAEH,SAvBhB,yBAAAN,EAAAjB,SAAA2B,EAAA,eA2BS,SAASC,IAEN,OAAO1B,MAAM,oCAAqC,CAC9CC,OAAQ,MACRC,QAAS,CACLC,cAJW,UAAU3C,GAKrB4C,OAAU,mBACVC,eAAgB,sBAI5B,SAAU9B,IAAV,IAAAuC,EAAA,OAAA3B,EAAAC,EAAAC,KAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,OAEsB,OAFtBmC,EAAApC,KAAA,EAAAoC,EAAAnC,KAAA,EAE4BT,EAAW2C,GAFvC,OAGQ,OADMZ,EAFda,EAAAlC,KAAAkC,EAAAnC,KAAA,EAGc8B,YAAI,CAACtD,KAAMD,EAAsBM,SAAUyC,IAHzD,OAAAa,EAAAnC,KAAA,gBAKQ,OALRmC,EAAApC,KAAA,EAAAoC,EAAAH,GAAAG,EAAA,SAAAA,EAAAnC,KAAA,GAKc8B,YAAI,CAACtD,KAAMD,EAA4BR,MAAOoE,EAAAH,GAAEH,UAL9D,yBAAAM,EAAA7B,SAAA8B,EAAA,cASJ,SAAUpD,EAAYnB,GAAtB,IAAAwD,EAAAgB,EAAAf,EAAAP,EAAA,OAAApB,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,OAEgB,OAFhBsC,EAAAvC,KAAA,EAAAuC,EAAAtC,KAAA,EAEsBwB,YAAOlC,GAF7B,OAMsB,OAJdtB,GAFRsE,EAAArC,KAGgBoB,EAAa,UAAUrD,GAEvBqE,EAAK,2EAA2ExE,EAAKA,KALrGyE,EAAAtC,KAAA,EAM6BQ,MAAM6B,EAAK,CAC5B5B,OAAQ,SACRC,QAAS,CACLC,cAAiBU,EACjBT,OAAU,mBACVC,eAAgB,oBAEpBE,KAAM,KAblB,OAeqB,OATPO,EANdgB,EAAArC,KAAAqC,EAAAtC,KAAA,GAe2B2B,YAAK,CAACL,EAAOA,EAAMnB,OAf9C,QAiBQ,OAFMY,EAfduB,EAAArC,KAgBQ2B,MAAMb,EAAKc,SAhBnBS,EAAAtC,KAAA,GAiBc8B,YAAIC,MAjBlB,QAkBQ,OAlBRO,EAAAtC,KAAA,GAkBc8B,YAAI,CAACtD,KAAMD,EAA0BV,KAAMkD,IAlBzD,QAAAuB,EAAAtC,KAAA,iBAoBQ,OApBRsC,EAAAvC,KAAA,GAAAuC,EAAAN,GAAAM,EAAA,SAAAA,EAAAtC,KAAA,GAoBc8B,YAAI,CAACtD,KAAMD,EAAwBR,MAAOuE,EAAAN,GAAEH,UApB1D,yBAAAS,EAAAhC,SAAAiC,EAAA,eA2CA,SAAUtD,EAAmBpB,GAA7B,OAAA8B,EAAAC,EAAAC,KAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,OAGQ,OAHRwC,EAAAzC,KAAA,EAAAyC,EAAAxC,KAAA,EAGc8B,YAAI,CAACtD,KAAMD,EAAyBV,SAHlD,OAAA2E,EAAAxC,KAAA,eAKQ,OALRwC,EAAAzC,KAAA,EAAAyC,EAAAR,GAAAQ,EAAA,SAAAA,EAAAxC,KAAA,EAKc8B,YAAI,CAACtD,KAAMD,EAAuBR,MAAOyE,EAAAR,GAAEH,UALzD,wBAAAW,EAAAlC,SAAAmC,EAAA,cAWJ,SAAUvD,EAAYkC,GAAtB,IAAAC,EAAAxD,EAAA6E,EAAAL,EAAAf,EAAAP,EAAA,OAAApB,EAAAC,EAAAC,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,OAEkB,OAFlB2C,EAAA5C,KAAA,EAAA4C,EAAA3C,KAAA,EAEwBwB,YAAOlC,GAF/B,OAU0B,OARhBtB,GAFV2E,EAAA1C,KAGoBoB,EAAa,UAAUrD,GACzBH,EAAOuD,EAASvD,KACd6E,EAAQ7E,EAAK6E,eACZ7E,EAAK6E,QACf7E,EAAK4D,aAAa,EACjB5D,EAAK6D,UAAW,IACTW,EAAK,2EAA2EK,EATnGC,EAAA3C,KAAA,GAUiCQ,MAAM6B,EAAK,CAC5B5B,OAAQ,MACRC,QAAS,CACLC,cAAiBU,EACjBT,OAAU,mBACVC,eAAgB,oBAElBE,KAAMC,KAAKC,UAAUpD,KAjBvC,QAmBqB,OATHyD,EAVlBqB,EAAA1C,KAAA0C,EAAA3C,KAAA,GAmB2B2B,YAAK,CAACL,EAAOA,EAAMnB,OAnB9C,QAqBQ,OAFMY,EAnBd4B,EAAA1C,KAoBQ2B,MAAMb,EAAKc,SApBnBc,EAAA3C,KAAA,GAqBc8B,YAAI,CAACtD,KAAMD,EAA0BV,KAAMkD,IArBzD,QAsBQ,OAtBR4B,EAAA3C,KAAA,GAsBc8B,YAAIC,MAtBlB,QAAAY,EAAA3C,KAAA,iBAyBQ,OAzBR2C,EAAA5C,KAAA,GAAA4C,EAAAX,GAAAW,EAAA,SAAAA,EAAA3C,KAAA,GAyBc8B,YAAI,CAACtD,KAAMD,EAAwBR,MAAO4E,EAAAX,GAAEH,UAzB1D,yBAAAc,EAAArC,SAAAsC,EAAA,eA6BA,SAAUzD,IAAV,IAAAO,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAgD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,OAGyB,OAHzB6C,EAAA9C,KAAA,EAAA8C,EAAA7C,KAAA,EAG+BT,EAAWuB,GAH1C,UAGcpB,EAHdmD,EAAA5C,KAIQ6C,QAAQC,IAAI,QAAQrD,IAChBA,EAASsD,OALrB,CAAAH,EAAA7C,KAAA,SAMY,OANZ6C,EAAA7C,KAAA,EAMkB8B,YAAI,CAACtD,KAAMD,EAAyBR,MAAO2B,EAASmC,UANtE,OAAAgB,EAAA7C,KAAA,iBAQY,OARZ6C,EAAA7C,KAAA,GAQkB8B,YAAI,CAACtD,KAAMD,EAA2BV,KAAM6B,EAASuD,QAAQjF,QAR/E,QAAA6E,EAAA7C,KAAA,iBAWQ,OAXR6C,EAAA9C,KAAA,GAAA8C,EAAAb,GAAAa,EAAA,SAAAA,EAAA7C,KAAA,GAWc8B,YAAI,CAACtD,KAAMD,EAAyBR,MAAO8E,EAAAb,GAAEH,UAX3D,yBAAAgB,EAAAvC,SAAA4C,EAAA,eAeA,SAAU9D,KAAV,IAAA+D,EAAA,OAAAxD,EAAAC,EAAAC,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,OAEkB,OAFlBoD,EAAArD,KAAA,EAAAqD,EAAApD,KAAA,EAEwBwB,YAAOlC,GAF/B,OAGsB,OADZtB,GAFVoF,EAAAnD,KAAAmD,EAAApD,KAAA,EAG4BT,EAAWgB,GAHvC,OAKQ,OAFM4C,EAHdC,EAAAnD,KAAAmD,EAAApD,KAAA,EAKc8B,YAAI,CAACtD,KAAMD,EAA2BK,KAAMuE,IAL1D,OAAAC,EAAApD,KAAA,iBAOQ,OAPRoD,EAAArD,KAAA,GAAAqD,EAAApB,GAAAoB,EAAA,SAAAA,EAAApD,KAAA,GAOc8B,YAAI,CAACtD,KAAMD,EAAyBR,MAAOqF,EAAApB,GAAEH,UAP3D,yBAAAuB,EAAA9C,SAAA+C,EAAA,eAUO,IAgCDrF,GApBSsF,GAAc,SAACzF,GAAD,MAAS,CAClCW,KAAMD,EACNV,KAAM,CAAC0F,SAAS1F,EAAK0F,SAASC,UAAU3F,EAAK2F,UAAUC,UAAU5F,EAAK4F,UAClEC,cAAc7F,EAAK6F,cAAchB,QAAQ7E,EAAK8F,MAGvC5B,GAAe,iBAAK,CAC/BvD,KAAMD,IAEH,SAAUc,KAAV,OAAAM,EAAAC,EAAAC,KAAA,SAAA+D,GAAA,cAAAA,EAAA7D,KAAA6D,EAAA5D,MAAA,OAEC,OAFD4D,EAAA5B,GACG6B,IADHD,EAAA5D,KAAA,EAEO8D,YAAWvF,EAAmBY,GAFrC,OAGC,OAHDyE,EAAAG,GAAAH,EAAA3D,KAAA2D,EAAA5D,KAAA,EAGOgE,YAAUzF,EAAmBa,IAHpC,OAIC,OAJDwE,EAAAK,GAAAL,EAAA3D,KAAA2D,EAAA5D,KAAA,EAIOgE,YAAUzF,EAAkBO,GAJnC,OAKC,OALD8E,EAAAM,GAAAN,EAAA3D,KAAA2D,EAAA5D,KAAA,GAKOgE,YAAUzF,EAAqBW,GALtC,QAMC,OAND0E,EAAAO,GAAAP,EAAA3D,KAAA2D,EAAA5D,KAAA,GAMOgE,YAAUzF,EAAqBS,GANtC,QAOC,OAPD4E,EAAAQ,GAAAR,EAAA3D,KAAA2D,EAAA5D,KAAA,GAOOgE,YAAUzF,EAAiBU,GAPlC,QAQC,OARD2E,EAAAS,GAAAT,EAAA3D,KAAA2D,EAAA5D,KAAA,GAQOgE,YAAUzF,EAAuBQ,GARxC,QACH,OADG6E,EAAAU,GAAAV,EAAA3D,KAAA2D,EAAAW,GAAA,CAAAX,EAAAG,GAAAH,EAAAK,GAAAL,EAAAM,GAAAN,EAAAO,GAAAP,EAAAQ,GAAAR,EAAAS,GAAAT,EAAAU,IAAAV,EAAA5D,KAAA,IACH,EAAA4D,EAAA5B,IAAA4B,EAAAW,IADG,yBAAAX,EAAAtD,SAAAkE,GAYQnF,ICjOFoF,GAAiBC,yJCCxBC,eACJ,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAnG,OAAAoG,GAAA,EAAApG,CAAAqG,KAAAJ,IAChBE,EAAAnG,OAAAsG,GAAA,EAAAtG,CAAAqG,KAAArG,OAAAuG,GAAA,EAAAvG,CAAAiG,GAAAhD,KAAAoD,KAAMH,KAgCTM,SAAW,WACZ,IAAMC,EAAW,IAAIC,SAASP,EAAKQ,MAC9BC,EAAS,GACdH,EAASI,QAAQ,SAASC,EAAOC,GAC/B,GAAY,cAARA,EAAoB,CACtB,IAAI7F,EAAI4F,EAAME,MAAM,KAClBC,EAAoB,IAAR/F,EAAE,GAAW,GAAe,IAARA,EAAE,GACpC0F,EAAOG,GAAME,OAEbL,EAAOG,GAAOD,IAGbF,EAAM,SAAeA,EAAM,QAAYjH,OAAQ,EAChDwG,EAAKD,MAAMgB,WAAWN,WAEfA,EAAO5C,QAChBmC,EAAKD,MAAMiB,QAAQP,IAEnBT,EAAKD,MAAMtB,iBAnDOuB,EAsDpBiB,OAAO,WACLC,OAAOC,SAASC,UAvDEpB,EA0DnBqB,aAAe,SAACC,GAAU,IAAAC,EACWD,EAA5BE,OAAUC,EADOF,EACPE,KAAMd,EADCY,EACDZ,MACxBX,EAAK0B,SAAL7H,OAAA8H,GAAA,EAAA9H,CAAA,GAAiB4H,EAAOd,KA1DtBX,EAAK1G,MAAM,CACToF,SAAS,KACTb,QAAQ,GACRc,UAAU,aACVC,UAAU,WACVC,cAAc,IAPAmB,2FAUQ4B,GAE3B,IAAMC,KAAEC,QAAQ5B,KAAKH,MAAM3G,WAAWwI,EAAUxI,YAAc,KAAA2I,EACuBH,EAAUxI,WADjC4I,EAAAD,EACtDrD,gBADsD,IAAAsD,EAC7C,GAD6CA,EAAAC,EAAAF,EAC1CpD,iBAD0C,IAAAsD,EAChC,aADgCA,EAAAC,EAAAH,EACnBnD,iBADmB,IAAAsD,EACT,EADSA,EAAAC,EAAAJ,EACPlD,qBADO,IAAAsD,EACO,GADPA,EAAAC,EAAAL,EACUlE,eADV,IAAAuE,EACkB,GADlBA,EAEzDC,EAAO,GACX,GAAIzD,GAAaA,EAAY,EAAE,CAC7B,IAAI0D,EAAe,IAAIC,KAAK,MAC3BD,EAAaE,WAAW5D,GACzByD,EAASC,EAAaG,cAAcC,OAAO,GAAI,GAEjDxC,KAAKwB,SAAS,CAAChD,SAASA,EACtBb,QAAQA,EAAQc,UAAUA,EAAUC,UAAUyD,EAAOxD,cAAcA,2CAIvD,IAAA8D,EACezC,KAAKH,MAAzB6C,oBADK,IAAAD,EACU,GADVA,EAMV,OAJeC,EAAaxE,SAAWwE,EAAaxE,QAAQpF,MAAS4J,EAAaxE,QAAQpF,KAAKQ,OAAQ,GACzGoJ,EAAaxE,QAAQpF,KAAK6J,IAAI,SAAA7I,GAAQ,MACX,aAAzBA,EAAS8I,aACTC,EAAAhI,EAAAiI,cAAA,UAAQpC,IAAK5G,EAAS8E,GAAI6B,MAAO3G,EAAS8E,IAAK9E,EAASyH,yCAiCnD,IAAAwB,EAAA/C,KACR,OAEC6C,EAAAhI,EAAAiI,cAAA,OAAKE,UAAU,WACfH,EAAAhI,EAAAiI,cAACG,GAAA,EAAD,CAAMC,IAAK,SAAAC,GAAE,OAAKJ,EAAKzC,KAAO6C,IAC9BN,EAAAhI,EAAAiI,cAACG,GAAA,EAAKG,IAAN,KACFP,EAAAhI,EAAAiI,cAACG,GAAA,EAAKI,MAAN,CAAaC,GAAIC,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,MACvCb,EAAAhI,EAAAiI,cAACG,GAAA,EAAKU,MAAN,yBACAd,EAAAhI,EAAAiI,cAACG,GAAA,EAAKW,QAAN,CAAcnK,KAAK,OAAO8H,KAAK,WAAWd,MAAOT,KAAK5G,MAAMoF,SAAUqF,SAAU7D,KAAKmB,eACrF0B,EAAAhI,EAAAiI,cAACG,GAAA,EAAKW,QAAN,CAAcnK,KAAK,SAAS8H,KAAK,UAAUd,MAAOT,KAAK5G,MAAMuE,YAI/DkF,EAAAhI,EAAAiI,cAACG,GAAA,EAAKG,IAAN,KACEP,EAAAhI,EAAAiI,cAACG,GAAA,EAAKI,MAAN,CAAYC,GAAIC,KAAMC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACrCb,EAAAhI,EAAAiI,cAACG,GAAA,EAAKU,MAAN,aACAd,EAAAhI,EAAAiI,cAACG,GAAA,EAAKW,QAAN,CAAcrC,KAAK,YAAa9H,KAAK,OAAOgH,MAAOT,KAAK5G,MAAMqF,UAAYoF,SAAU7D,KAAKmB,gBAG3F0B,EAAAhI,EAAAiI,cAACG,GAAA,EAAKI,MAAN,CAAYC,GAAIC,KAAMC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACrCb,EAAAhI,EAAAiI,cAACG,GAAA,EAAKU,MAAN,aACAd,EAAAhI,EAAAiI,cAACG,GAAA,EAAKW,QAAN,CAAcrC,KAAK,YAAY9H,KAAK,OAAOgH,MAAOT,KAAK5G,MAAMsF,UAAWmF,SAAU7D,KAAKmB,iBAG3F0B,EAAAhI,EAAAiI,cAACG,GAAA,EAAKG,IAAN,KACAP,EAAAhI,EAAAiI,cAACG,GAAA,EAAKI,MAAN,CAAaC,GAAIC,KAAMC,GAAG,KAAKC,GAAG,KAAKC,GAAG,MACxCb,EAAAhI,EAAAiI,cAACG,GAAA,EAAKU,MAAN,oBACAd,EAAAhI,EAAAiI,cAACG,GAAA,EAAKW,QAAN,CAAcrC,KAAK,gBAAgB+B,GAAG,SAAS7C,MAAOT,KAAK5G,MAAMuF,cAAekF,SAAU7D,KAAKmB,aAAc2C,MAAO,CAACC,MAAS,SAC7H/D,KAAKgE,iBAIVnB,EAAAhI,EAAAiI,cAACG,GAAA,EAAKG,IAAN,KACAP,EAAAhI,EAAAiI,cAACG,GAAA,EAAKI,MAAN,KACAR,EAAAhI,EAAAiI,cAACmB,GAAA,EAAD,CAAQC,QAAQ,UAAUJ,MAAO,CAACK,MAAS,SAAUC,QAASpE,KAAKG,UAAnE,QACE0C,EAAAhI,EAAAiI,cAACmB,GAAA,EAAD,CAAQC,QAAQ,OAAOJ,MAAO,CAACK,MAAS,QAAQE,eAAgB,OAAQD,QAASpE,KAAKe,QAAtF,qBAnGqBuD,IAAMC,WA6HdC,eAPU,SAAApL,GACvB,MAAO,CACLsJ,aAActJ,EAAMU,SACpBb,MAAMG,EAAMH,MACZC,WAAWE,EAAMF,aAhBM,SAAAuL,GACzB,MAAO,CACH3D,QAAQ,SAAChI,GACP2L,EFkFmB,SAAC3L,GAAD,MAAS,CAChCW,KAAMD,EACNV,KAAKA,GEpFQ4L,CAAc5L,KAEzB+H,WAAW,SAAC/H,GACV2L,EFmFqB,SAAC3L,GAAD,MAAS,CAClCW,KAAMD,EACNV,KAAKA,GErFQ6L,CAAc7L,KACtByF,cAAc,WACjBkG,EAASlG,GAAc,QAWdiG,CAGb5E,0CC/HK,SAASgF,GAATC,GAAyC,IAApBC,EAAoBD,EAApBC,SAASC,EAAWF,EAAXE,SAC7BC,EAAkBC,qBAAWC,MAC5BC,EAAeC,aAAmBN,EAAU,WAC7CC,GACJA,EAASD,KAELO,EAAoBL,IAAoBF,EAE9C,OAEEjC,EAAAhI,EAAAiI,cAAA,OAAKgB,MAAO,CAACK,MAAQ,QAAQmB,cAAc,oBAAoBC,eAAe,OAAOC,cAAc,OACjG/L,KAAK,SAASmF,GAAG,SACjBwF,QAASe,IAEPE,GAAqBxC,EAAAhI,EAAAiI,cAAC2C,GAAA,EAAD,CAAaX,SAAS,OAK5C,SAASY,GAATC,GAA6C,IAApBb,EAAoBa,EAApBb,SAASC,EAAWY,EAAXZ,SACjCC,EAAkBC,qBAAWC,MAC7BT,EAAWmB,cACVT,EAAeC,aAAmBN,EAAU,WACjDL,EAASlG,GAAc,KACnBwG,GACJA,EAASD,KAELO,EAAoBL,IAAoBF,EAE9C,OAEEjC,EAAAhI,EAAAiI,cAAA,OAAKgB,MAAO,CAACK,MAAQ,QAAQmB,cAAc,oBAAoBC,eAAe,OAAOC,cAAc,OACjG/L,KAAK,SACL2K,QAASe,IAEPE,GAAoBxC,EAAAhI,EAAAiI,cAAC+C,GAAA,EAAD,CAAaf,SAAS,+BCjC5CgB,uBACJ,SAAAA,EAAYjG,GAAM,IAAAC,EAAA,OAAAnG,OAAAoG,GAAA,EAAApG,CAAAqG,KAAA8F,IAChBhG,EAAAnG,OAAAsG,GAAA,EAAAtG,CAAAqG,KAAArG,OAAAuG,GAAA,EAAAvG,CAAAmM,GAAAlJ,KAAAoD,KAAMH,KACDzG,MAAM,CAAC2M,UAAS,GAFLjG,qFAKhBE,KAAKH,MAAMmG,0DAGaC,GACtBA,EAAUhN,QAAU+G,KAAKH,MAAM5G,QACnC+G,KAAKH,MAAMqG,YACXlG,KAAKH,MAAM6C,uDAIT1C,KAAKwB,SAAS,CAACuE,UAAW/F,KAAK5G,MAAM2M,8CAGrCI,SAASC,eAAe,UAAUC,yCAG3B,IAAAtD,EAAA/C,KAAAsG,EACatG,KAAKH,MAAlBzB,aADA,IAAAkI,EACQ,GADRA,EAEDC,EAAWnI,EAAMF,SAAWE,EAAMF,QAAQ5E,OAAQ,GAAK8E,EAAMF,QAAQyE,IAAI,SAAC6D,GAAD,OAC9E3D,EAAAhI,EAAAiI,cAAA,WAAKD,EAAAhI,EAAAiI,cAACS,GAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAII,MAAO,CAAC2C,gBAAgB,sBAAuB5D,EAAAhI,EAAAiI,cAAA,YAAQ0D,EAAEhI,UAAgBqE,EAAAhI,EAAAiI,cAAA,WACzGD,EAAAhI,EAAAiI,cAAA,QAAMgB,MAAO,CAAC4C,MAAQ,QAASF,EAAE/H,YACjCoE,EAAAhI,EAAAiI,cAACS,GAAA,EAAD,CAAMC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAII,MAAO,CAAC2C,gBAAgB,oBAAoBjB,cAAc,OAAOmB,iBAAiB,QAC5G9D,EAAAhI,EAAAiI,cAAC8D,GAAA,EAAD,CAAKxC,QAAS,WAAKrB,EAAKlD,MAAMtB,cAAciI,GAAGzD,EAAKgD,eACpDlD,EAAAhI,EAAAiI,cAACS,GAAA,EAAD,CAAMC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAII,MAAO,CAAC2C,gBAAgB,oBAAoBjB,cAAc,OAAOmB,iBAAiB,QAC9G9D,EAAAhI,EAAAiI,cAAC+D,GAAA,EAAD,CAAOzC,QAAS,WAAKrB,EAAKlD,MAAMiH,iBAAiBN,EAAE5H,WAGtD,OAAOiE,EAAAhI,EAAAiI,cAAAD,EAAAhI,EAAAkM,SAAA,KAENlE,EAAAhI,EAAAiI,cAAA,eAASD,EAAAhI,EAAAiI,cAAA,WACTD,EAAAhI,EAAAiI,cAAA,UACED,EAAAhI,EAAAiI,cAAA,oBAGED,EAAAhI,EAAAiI,cAAA,eACFD,EAAAhI,EAAAiI,cAACM,GAAA,EAAD,KACHP,EAAAhI,EAAAiI,cAACkE,GAAA,EAAD,CAAWC,iBAAiB,IAAKC,YAAY,EAAS5D,GAAIC,KAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAE/Eb,EAAAhI,EAAAiI,cAACqE,GAAA,EAAD,KACEtE,EAAAhI,EAAAiI,cAACqE,GAAA,EAAKC,OAAN,CAAapE,UAAU,YAAYc,MAAO,CAACC,MAAQ,UAAUsD,OAAS,sBAAsBxE,EAAAhI,EAAAiI,cAAA,WAC9FD,EAAAhI,EAAAiI,cAAA,OAAKgB,MAAO,CAACK,MAAQ,SAArB,WACItB,EAAAhI,EAAAiI,cAAC4C,GAAD,CAAiBZ,SAAS,MAC1BjC,EAAAhI,EAAAiI,cAAC8B,GAAD,CAAYE,SAAS,QAEvBjC,EAAAhI,EAAAiI,cAACkE,GAAA,EAAUM,SAAX,CAAoBtE,UAAU,oBAAoBc,MAAO,CAACC,MAAQ,UAAUsD,OAAS,qBAAsBvC,SAAS,KAClHjC,EAAAhI,EAAAiI,cAACqE,GAAA,EAAKI,KAAN,KAAW1E,EAAAhI,EAAAiI,cAAC0E,GAAD,QAEb3E,EAAAhI,EAAAiI,cAACkE,GAAA,EAAUM,SAAX,CAAoBtE,UAAU,qBAAsBc,MAAO,CAACC,MAAQ,UAAUsD,OAAS,qBAAsBvC,SAAS,KACpHjC,EAAAhI,EAAAiI,cAACqE,GAAA,EAAKI,KAAN,KAEHhB,OAGwB1D,EAAAhI,EAAAiI,cAACM,GAAA,EAAD,gBA3DbkB,IAAMC,YAwFTC,eAtBU,SAAApL,GACvB,MAAO,CACLgF,MAAOhF,EAAMS,KACbZ,MAAMG,EAAMH,QAIW,SAAAwL,GACzB,MAAO,CACLuB,MAAO,WACHvB,EAAS,CAAChL,KAAM,gBAElByM,UAAW,WACTzB,EAASzH,OAEX0F,aAAa,WACX+B,EAAS,CAAChL,KAAM,oBAElBqN,iBAAiB,SAAChO,GAAD,OAAW2L,EJgHF,SAAC3L,GAAD,MAAS,CACrCW,KAAMD,EACNV,KAAKA,GIlHmCgO,CAAiBhO,KACvDyF,cAAc,SAACzF,GAAD,OAAW2L,EAAUlG,GAAczF,OAGxC0L,CAIbsB,IC9FI2B,GJDC,SAAwB5O,GAC5B,IAAM6O,EAAa,CAAChI,IACfiI,EAAmB3G,OAAO4G,sCAAwCC,IACjEJ,EAAQK,YAAY3O,EACxBN,EAAc8O,EAAiBI,IAAeC,WAAf,EAAmBN,KAElD,OADAhI,GAAeuI,IAAI3N,IACZmN,EILES,GAGZC,IAASC,OAAOvF,EAAAhI,EAAAiI,cAACuF,EAAA,EAAD,CAAUZ,MAAOA,IAC/B5E,EAAAhI,EAAAiI,cAACwF,GAAD,OACAnC,SAASC,eAAe","file":"static/js/main.10e63efd.chunk.js","sourcesContent":["export const LOGIN_USER = 'LOGIN_USER';\r\nexport const LOAD_TASKS = 'LOAD_TASKS';\r\nexport const LOAD_TASKS_SUCCESS = 'LOAD_TASKS_SUCCESS';\r\nexport const LOAD_TASKS_ERROR = 'LOAD_TASKS_ERROR';\r\nexport const LOAD_TOKEN_SUCCESS = 'LOAD_TOKEN_SUCCESS';\r\nexport const LOAD_TOKEN_ERROR = 'LOAD_TOKEN_ERROR';\r\nexport const ADD_TASKS = 'ADD_TASKS';\r\nexport const UPDATE_TASKS = 'UPDATE_TASKS';\r\nexport const ADD_TASKS_SUCCESS = 'ADD_TASKS_SUCCESS';\r\nexport const ADD_TASKS_ERROR = 'ADD_TASKS_ERROR';\r\nexport const DELETE_TASKS='DELETE_TASKS';\r\nexport const GET_TASK='GET_TASK';\r\nexport const GET_TASK_SUCCESS = 'GET_TASK_SUCCESS';\r\nexport const GET_TASK_ERROR = 'GET_TASK_ERROR';\r\nexport const FETCH_ASSIGNEE='FETCH_ASSIGNEE';\r\nexport const LOAD_ASSIGNEE='LOAD_ASSIGNEE';\r\nexport const LOAD_ASSIGNEE_ERROR='LOAD_ASSIGNEE_ERROR';","import * as types from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    data: [],\r\n    loading: false,   \r\n    error: '',\r\n    token:\"\",\r\n    singleTask:{}\r\n};\r\n\r\nexport default function taskReducer(state = initialState, action) {\r\n  switch (action.type) {    \r\n    case types.LOGIN_USER: {  \r\n        return { ...state,loading: false,error:'' };\r\n    } \r\n    case types.LOAD_TASKS: {  \r\n        return { ...state,loading: true,error:''};\r\n    }\r\n    case types.LOAD_TASKS_SUCCESS: {    \r\n        return { ...state,  task: action.task,loading: false} \r\n    }  \r\n    case types.LOAD_TASKS_ERROR: { \r\n        return { ...state,loading: false,error: action.error};    \r\n    }\r\n    case types.GET_TASK_SUCCESS: {    \r\n        return { ...state,  singleTask: action.data.data,loading: false} \r\n    }  \r\n    case types.GET_TASK_ERROR: { \r\n        return { ...state,loading: false,error: action.error};    \r\n    }\r\n    case types.LOAD_ASSIGNEE: {    \r\n        return { ...state,  assignee: action.assignee,loading: false} \r\n    }  \r\n    case types.LOAD_ASSIGNEE_ERROR: { \r\n        return { ...state,loading: false,error: action.error};    \r\n    }   \r\n    case types.LOAD_TOKEN_SUCCESS: {    \r\n        return { ...state,  token: action.data,loading: false} \r\n    }  \r\n    case types.LOAD_TOKEN_ERROR: { \r\n        return { ...state,loading: false,error: action.error};    \r\n    }\r\n    case types.ADD_TASKS_SUCCESS: {  \r\n      return { ...state,  data: action.data,loading: false} \r\n       \r\n  }  \r\n  case types.ADD_TASKS_ERROR: { \r\n      return { ...state,loading: false,error: action.error};    \r\n  }  \r\n    default: {\r\n        return state;  \r\n    } \r\n  }\r\n}\r\n","import { put, takeEvery, takeLatest,all,select,call} from 'redux-saga/effects';\r\nimport * as action from \"../actions/actionTypes\";\r\nexport const getData = (state) => state.token\r\n \r\nasync function fetchAsync(func) { \r\n    const response = await func();\r\n    if (response.ok) {   \r\n        return await response.json(); \r\n    }\r\n    throw new Error(\"Unexpected error!!!\");\r\n}\r\n\r\nfunction getTasks(){\r\n    \r\n    const getKeyword = 'Bearer '+token;\r\n    return fetch(\"https://stage.api.sloovi.com/task/lead_6996a7dcdddc4af3b4f71ccb985cea38\", { \r\n            method: 'GET' ,\r\n            headers : {\r\n            'Authorization':getKeyword ,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',          \r\n        }\r\n    });\r\n}\r\n\r\n  \r\nfunction getToken(){\r\n    const data= {\r\n        email : 'smithcheryl@yahoo.com',\r\n        password : '12345678'\r\n      }\r\n    return fetch(\"https://stage.api.sloovi.com/login\", { \r\n        method: 'POST' ,\r\n        headers : {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',          \r\n        },\r\n        body: JSON.stringify(data),   \r\n    });\r\n}\r\n\r\n\r\nfunction* addTasks(formdata) {  \r\n    try { \r\n        token = yield select(getData); \r\n          const getKeyword = 'Bearer '+token;\r\n          let data = formdata.data;\r\n           data.is_completed=0;\r\n            data.time_zone= 5000;\r\n        const users = yield fetch(\"https://stage.api.sloovi.com/task/lead_6996a7dcdddc4af3b4f71ccb985cea38\", { \r\n            method: 'POST' ,\r\n            headers :{\r\n                'Authorization': getKeyword,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',          \r\n              },\r\n            body: JSON.stringify(data )  \r\n        });\r\n        const body = yield call([users, users.json])\r\n        alert(body.message);\r\n        yield put({type: action.ADD_TASKS_SUCCESS, data: body});        \r\n        yield put(loadTaskAction());\r\n        \r\n    } catch (e) {    \r\n        yield put({type: action.ADD_TASKS_ERROR, error: e.message});  \r\n        alert(e.message);\r\n    }\r\n}\r\n\r\n         function fetchAssigneeList(){\r\n            const getKeyword = 'Bearer '+token;\r\n            return fetch(\"https://stage.api.sloovi.com/team\", { \r\n                method: 'GET' ,\r\n                headers :{\r\n                    'Authorization': getKeyword,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',          \r\n                  }   \r\n            });\r\n        }\r\n        function* fetchAssignee() {  \r\n            try { \r\n                const users = yield fetchAsync(fetchAssigneeList);\r\n                yield put({type: action.LOAD_ASSIGNEE, assignee: users});\r\n            } catch (e) {    \r\n                yield put({type: action.LOAD_ASSIGNEE_ERROR, error: e.message});  \r\n            }\r\n        }\r\n    \r\n    function* deleteTasks(data) {  \r\n        try { \r\n            token = yield select(getData); \r\n              const getKeyword = 'Bearer '+token;\r\n              \r\n              const url =\"https://stage.api.sloovi.com/task/lead_6996a7dcdddc4af3b4f71ccb985cea38/\"+data.data;\r\n            const users = yield  fetch(url, { \r\n                method: 'DELETE' ,\r\n                headers :{\r\n                    'Authorization': getKeyword,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',          \r\n                  },\r\n                body: {},   \r\n            });\r\n            const body = yield call([users, users.json])\r\n            alert(body.message);\r\n            yield put(loadTaskAction());\r\n            yield put({type: action.ADD_TASKS_SUCCESS, data: body});\r\n        } catch (e) {    \r\n            yield put({type: action.ADD_TASKS_ERROR, error: e.message});  \r\n        }\r\n    }\r\n\r\n    function* getSingleTask(data){\r\n        try { \r\n            token = yield select(getData); \r\n              const getKeyword = 'Bearer '+token;\r\n             const url =\"https://stage.api.sloovi.com/lead_6996a7dcdddc4af3b4f71ccb985cea38/\"+data.data;\r\n            const users = yield  fetch(url, { \r\n                method: 'GET' ,\r\n                headers :{\r\n                    'Authorization': getKeyword,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',          \r\n                  }   \r\n            });\r\n            const body = yield call([users, users.json])\r\n            yield put({type: action.GET_TASK_SUCCESS, data: body});\r\n        } catch (e) {    \r\n            yield put({type: action.GET_TASK_ERROR, error: e.message});  \r\n        }\r\n    }\r\n    function* getSingleTaskNoApi(data){\r\n        try { \r\n          \r\n            yield put({type: action.GET_TASK_SUCCESS, data});\r\n        } catch (e) {    \r\n            yield put({type: action.GET_TASK_ERROR, error: e.message});  \r\n        }\r\n    }\r\n      \r\n      \r\n\r\nfunction* updateTasks(formdata) {  \r\n    try { \r\n          token = yield select(getData); \r\n              const getKeyword = 'Bearer '+token;\r\n              let data = formdata.data;\r\n              const task_id=data.task_id;\r\n              delete data.task_id;\r\n           data.is_completed=0;\r\n            data.time_zone= 5000;\r\n             const url =\"https://stage.api.sloovi.com/task/lead_6996a7dcdddc4af3b4f71ccb985cea38/\"+task_id;\r\n            const users = yield  fetch(url, { \r\n                method: 'PUT' ,\r\n                headers :{\r\n                    'Authorization': getKeyword,\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',          \r\n                  }   ,\r\n                  body: JSON.stringify(data),   \r\n            });\r\n        const body = yield call([users, users.json])\r\n        alert(body.message);\r\n        yield put({type: action.ADD_TASKS_SUCCESS, data: body});\r\n        yield put(loadTaskAction());\r\n       \r\n    } catch (e) {    \r\n        yield put({type: action.ADD_TASKS_ERROR, error: e.message});  \r\n    }\r\n}\r\n\r\nfunction* LoginUser() {  \r\n    try {    \r\n        \r\n        const response = yield fetchAsync(getToken);\r\n        console.log(\"users\",response);\r\n        if (response.errors) {\r\n            yield put({type: action.LOAD_TOKEN_ERROR, error: response.message});\r\n          } else {\r\n            yield put({type: action.LOAD_TOKEN_SUCCESS, data: response.results.token})\r\n          }\r\n           } catch (e) {    \r\n        yield put({type: action.LOAD_TOKEN_ERROR, error: e.message});  \r\n    }\r\n}\r\n\r\nfunction* fetchTask() {  \r\n    try { \r\n          token = yield select(getData); \r\n        const tasks = yield fetchAsync(getTasks);\r\n        \r\n        yield put({type: action.LOAD_TASKS_SUCCESS, task: tasks});\r\n    } catch (e) {    \r\n        yield put({type: action.LOAD_TASKS_ERROR, error: e.message});  \r\n    }\r\n}\r\nexport const actionCreator=(data)=>({\r\n    type: action.ADD_TASKS,\r\n    data:data\r\n  })\r\n  export const actionUpdator=(data)=>({\r\n    type: action.UPDATE_TASKS,\r\n    data:data\r\n  })\r\n  export const deleteTaskAction=(data)=>({\r\n    type: action.DELETE_TASKS,\r\n    data:data\r\n  })\r\n  export const getTaskAction=(data)=>({\r\n    type: action.GET_TASK,\r\n    data :{task_msg:data.task_msg,task_date:data.task_date,task_time:data.task_time,\r\n        assigned_user:data.assigned_user,task_id:data.id}\r\n\r\n  })\r\n  export const loadTaskAction=()=>({\r\n    type: action.LOAD_TASKS\r\n  })\r\nexport function* saga() {   \r\n    yield all([\r\n        yield takeLatest(action.LOGIN_USER, LoginUser),\r\n        yield takeEvery(action.LOAD_TASKS, fetchTask),\r\n        yield takeEvery(action.ADD_TASKS, addTasks),\r\n        yield takeEvery(action.UPDATE_TASKS, updateTasks),\r\n        yield takeEvery(action.DELETE_TASKS, deleteTasks),\r\n        yield takeEvery(action.GET_TASK, getSingleTaskNoApi),\r\n        yield takeEvery(action.FETCH_ASSIGNEE, fetchAssignee)\r\n    ]);\r\n  }\r\n  let token;\r\nexport default saga;","import {createStore, applyMiddleware,compose} from 'redux';\r\nimport taskReducer from '../reducers/taskReducer';\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { saga } from '../saga/saga'\r\n\r\nexport const sagaMiddleware = createSagaMiddleware()\r\nexport function configureStore(initialState) {\r\n   const middleware = [sagaMiddleware];\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n   const store = createStore(taskReducer,\r\n     initialState, composeEnhancers(applyMiddleware(...middleware)));\r\n     sagaMiddleware.run(saga);\r\n     return store;\r\n   }","/*eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Button,Col,Form} from 'react-bootstrap';\r\nimport {actionCreator,actionUpdator,getTaskAction} from '../saga/saga';\r\nimport _ from 'lodash';\r\nclass TaskForm extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      task_msg:null,\r\n      task_id:\"\",\r\n      task_date:\"mm/dd/yyyy\",\r\n      task_time:\"--:-- --\",\r\n      assigned_user:\"\"\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps){\r\n   \r\n if(! (_.isEqual(this.props.singleTask,nextProps.singleTask)) ){\r\n  const {task_msg=\"\",task_date=\"mm/dd/yyyy\",task_time=0,assigned_user=\"\",task_id=\"\"}= nextProps.singleTask ;\r\n  var MHTime=\"\";\r\n  if (task_time && task_time > 0){\r\n    var measuredTime = new Date(null);\r\n     measuredTime.setSeconds(task_time); \r\n    MHTime = measuredTime.toISOString().substr(11, 5);\r\n  }\r\n  this.setState({task_msg:task_msg,\r\n    task_id:task_id,task_date:task_date,task_time:MHTime,assigned_user:assigned_user});\r\n }\r\n}\r\n\r\n  getAssignee() {\r\n    const {assigneeList = []} =this.props;\r\n    const listItems =assigneeList.results && assigneeList.results.data &&  assigneeList.results.data.length> 0 && \r\n    assigneeList.results.data.map(assignee => \r\n      assignee.user_status === \"accepted\" &&            \r\n      <option key={assignee.id} value={assignee.id}>{assignee.name}</option>)   \r\n      return listItems;\r\n}  \r\n onSubmit = () => {\r\nconst formData = new FormData(this.form);\r\n var object = {};\r\nformData.forEach(function(value, key){\r\n  if (key === \"task_time\"){\r\n    var a = value.split(':'); \r\nconst seconds = (+a[0]) * 60 * 60 + (+a[1]) * 60 ;\r\n    object[key] =seconds;\r\n  }else{\r\n    object[key] = value;\r\n  }\r\n});\r\n  if(object['task_id'] && object['task_id'].length >0){\r\n    this.props.updateTask(object);\r\n  }else{\r\n    delete object.task_id;\r\n  this.props.addTask(object);\r\n  }\r\n  this.props.getTaskAction();\r\n  \r\n};\r\ncancel=()=>{\r\n  window.location.reload()\r\n\r\n } \r\n handleChange = (event) => {\r\n  const { target: { name, value } } = event\r\n  this.setState({ [name]: value })\r\n}\r\n\r\n  render (){ \r\n   return(\r\n      \r\n    <div className=\"bg-info\">\r\n    <Form ref={el => (this.form = el)}>\r\n    <Form.Row>\r\n  <Form.Group  as={Col} sm=\"12\" md=\"12\" lg=\"12\">\r\n    <Form.Label>Task Description</Form.Label>\r\n    <Form.Control type=\"text\" name=\"task_msg\" value={this.state.task_msg} onChange={this.handleChange}/>\r\n    <Form.Control type=\"hidden\" name=\"task_id\" value={this.state.task_id}/>\r\n  \r\n  </Form.Group>\r\n  </Form.Row>\r\n  <Form.Row>\r\n    <Form.Group as={Col}  sm=\"6\" md=\"6\" lg=\"6\">\r\n      <Form.Label>Date</Form.Label>\r\n      <Form.Control name=\"task_date\"  type=\"date\" value={this.state.task_date}  onChange={this.handleChange}/>\r\n    </Form.Group>\r\n\r\n    <Form.Group as={Col}  sm=\"6\" md=\"6\" lg=\"6\">\r\n      <Form.Label>Time</Form.Label>\r\n      <Form.Control name=\"task_time\" type=\"time\" value={this.state.task_time} onChange={this.handleChange} />\r\n    </Form.Group>\r\n  </Form.Row>\r\n  <Form.Row>\r\n  <Form.Group  as={Col}  sm=\"12\" md=\"12\" lg=\"12\">\r\n    <Form.Label>Assign User</Form.Label>\r\n    <Form.Control name=\"assigned_user\" as=\"select\" value={this.state.assigned_user} onChange={this.handleChange} style={{\"width\": \"100%\"}}>\r\n    {this.getAssignee()}\r\n    </Form.Control>\r\n  </Form.Group>\r\n</Form.Row>\r\n<Form.Row>\r\n<Form.Group>\r\n<Button variant=\"success\" style={{\"float\": \"right\"}} onClick={this.onSubmit}>save</Button>\r\n  <Button variant=\"info\" style={{\"float\": \"right\",\"margin-right\": \"5px\"}} onClick={this.cancel} >cancel</Button></Form.Group>\r\n  </Form.Row>\r\n</Form>\r\n  </div>\r\n    )\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      addTask:(data) => { \r\n        dispatch(actionCreator(data))\r\n      },\r\n      updateTask:(data) => { \r\n        dispatch(actionUpdator(data))\r\n      }, getTaskAction:() => { \r\n      dispatch(getTaskAction({}))\r\n      }\r\n  }\r\n};\r\nconst mapStateToProps  = state => {\r\n  return {\r\n    assigneeList: state.assignee,\r\n    token:state.token,\r\n    singleTask:state.singleTask\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TaskForm);\r\n\r\n","import React, {useContext} from 'react';\r\nimport AccordionContext from 'react-bootstrap/AccordionContext';\r\nimport {useAccordionToggle} from 'react-bootstrap/AccordionToggle';\r\nimport { PlusSquare,DashSquare} from 'react-bootstrap-icons';\r\nimport { useDispatch } from \"react-redux\";\r\nimport {getTaskAction} from '../saga/saga';\r\n\r\nexport function TaskHeader({eventKey,callback}) {\r\n  const currentEventKey = useContext(AccordionContext); \r\n   const toggleOnClick =useAccordionToggle(eventKey, () => {\r\n     if(callback)\r\n    callback(eventKey);\r\n  });\r\n  const isCurrentEventKey = currentEventKey === eventKey;\r\n \r\n  return (\r\n   \r\n    <div style={{\"float\":\"right\",\"border-left\":\"1px solid #e2e1e1\",\"padding-left\":\"10px\",\"padding-top\":\"4px\"}}\r\n      type=\"button\" id=\"expand\"\r\n      onClick={toggleOnClick}\r\n    >\r\n      {!isCurrentEventKey && <PlusSquare  eventKey=\"1\"/>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TaskHeaderPlus({eventKey,callback}) {\r\n  const currentEventKey = useContext(AccordionContext);\r\n  const dispatch = useDispatch();\r\n   const toggleOnClick =useAccordionToggle(eventKey, () => {\r\n    dispatch(getTaskAction({}));\r\n     if(callback)\r\n    callback(eventKey);\r\n  });\r\n  const isCurrentEventKey = currentEventKey === eventKey;\r\n\r\n  return (\r\n   \r\n    <div style={{\"float\":\"right\",\"border-left\":\"1px solid #e2e1e1\",\"padding-left\":\"10px\",\"padding-top\":\"4px\"}}\r\n      type=\"button\"\r\n      onClick={toggleOnClick}\r\n    >\r\n      {!isCurrentEventKey &&<DashSquare  eventKey=\"0\"/>}\r\n    </div>\r\n  );\r\n}","/*eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Row,Col,Card,Accordion} from 'react-bootstrap';\r\nimport TaskForm from './TaskForm';\r\nimport {TaskHeader,TaskHeaderPlus} from './TaskHeader';\r\nimport { Eye,Trash} from 'react-bootstrap-icons';\r\nimport {deleteTaskAction, loadTaskAction,getTaskAction} from '../saga/saga';\r\nimport  \"../css/style.css\";\r\nclass App extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={showForm:false}\r\n  }\r\n  componentDidMount(){\r\n    this.props.login();\r\n    \r\n  }\r\n  componentWillReceiveProps(prevProps){\r\n  if (prevProps.token !== this.props.token){\r\n  this.props.loadTasks();\r\n  this.props.assigneeList();\r\n}\r\n  } \r\n  setFormState(){\r\n    this.setState({showForm: !this.state.showForm })\r\n   }\r\n   showForm(){\r\n    document.getElementById(\"expand\").click();\r\n   }\r\n  \r\n  render (){\r\n    const {tasks = []} =this.props;\r\n    const listItems =tasks.results && tasks.results.length> 0 && tasks.results.map((d) =>\r\n     <div><Col sm={8} md={8} lg={8}  style={{\"border-bottom\":\"1px solid #e2e1e1\"}} ><span >{d.task_msg}</span><br/>\r\n     <span style={{\"color\":\"red\"}}>{d.task_date}</span></Col>\r\n     <Col  sm={2} md={2} lg={2}  style={{\"border-bottom\":\"1px solid #e2e1e1\",\"padding-top\":\"15px\",\"padding-bottom\":\"5px\"}}>\r\n       <Eye onClick={()=>{this.props.getTaskAction(d);this.showForm();}}/></Col>\r\n       <Col  sm={2} md={2} lg={2}  style={{\"border-bottom\":\"1px solid #e2e1e1\",\"padding-top\":\"15px\",\"padding-bottom\":\"5px\"}}>\r\n       <Trash onClick={()=>{this.props.deleteTaskAction(d.id);}}/></Col>\r\n       </div>);\r\n   \r\n    return(<>\r\n     \r\n     <section><nav>\r\n     <ul>\r\n       <li>Task</li>\r\n      \r\n     </ul>\r\n   </nav><article>   \r\n       <Row>\r\n    <Accordion defaultActiveKey=\"0\"  transition={false}   as={Col} sm={4} md={4} lg={4}>\r\n    \r\n      <Card>\r\n        <Card.Header className=\"container\" style={{\"width\":\"initial\",\"border\":\"1px solid #e2e1e1\"}}><div>\r\n      <div style={{\"float\":\"left\"}}>Task(s)</div>\r\n          <TaskHeaderPlus  eventKey=\"0\"></TaskHeaderPlus>\r\n          <TaskHeader eventKey=\"1\"></TaskHeader></div>\r\n        </Card.Header>\r\n        <Accordion.Collapse className=\"bg-info container\" style={{\"width\":\"initial\",\"border\":\"1px solid #e2e1e1\"}} eventKey=\"1\">\r\n          <Card.Body><TaskForm /></Card.Body>\r\n        </Accordion.Collapse>\r\n        <Accordion.Collapse className=\"bg-light container\"  style={{\"width\":\"initial\",\"border\":\"1px solid #e2e1e1\"}} eventKey=\"0\">\r\n          <Card.Body>\r\n        \r\n      {listItems }\r\n     </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card></Accordion></Row><Row>\r\n       </Row>\r\n      </article></section>\r\n     </>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps  = state => {\r\n  return {\r\n    tasks: state.task,\r\n    token:state.token\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    login: () => { \r\n        dispatch({type: 'LOGIN_USER' })\r\n      },\r\n      loadTasks: () => { \r\n        dispatch(loadTaskAction())\r\n      },\r\n      assigneeList:() => { \r\n        dispatch({type: 'FETCH_ASSIGNEE' })\r\n      },\r\n      deleteTaskAction:(data) =>  dispatch( deleteTaskAction(data)),\r\n      getTaskAction:(data) =>  dispatch( getTaskAction(data))\r\n  }\r\n};\r\nexport default connect(\r\n  mapStateToProps\r\n,\r\n  mapDispatchToProps\r\n)(App);\r\n\r\n","import \"babel-polyfill\"\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {configureStore} from './store/configureStore';\nimport App from './components/App'\n\nconst store = configureStore();\n\nfunction render() {\n  ReactDOM.render(<Provider store={store}>\n    <App /></Provider>,\n    document.getElementById('root')\n  )\n}\n\nrender()\n"],"sourceRoot":""}